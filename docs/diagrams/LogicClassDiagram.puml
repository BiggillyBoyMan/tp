@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic as LogicPackage {

package "Parser Classes" as ParserClasses{
}
Class AddCommand
Class EditCommand
Class DeleteCommand
Class FindCommand
Class FilterCommand
Class ListCommand
Class SortCommand
Class ClearCommand
Class HelpCommand
Class ExitCommand
Class CommandResult
Class "{abstract}\nCommand" as Command


Class "<<interface>>\nLogic" as Logic
Class LogicManager
}

package Model {
Class HiddenModel #FFFFFF
}

package Storage {
}

Class HiddenOutside #FFFFFF
HiddenOutside ..> Logic

LogicManager .right.|> Logic
LogicManager -right->"1" ParserClasses
ParserClasses ..> AddCommand : <<create>>
ParserClasses ..> EditCommand : <<create>>
ParserClasses ..> DeleteCommand : <<create>>
ParserClasses ..> FindCommand : <<create>>
ParserClasses ..> FilterCommand : <<create>>
ParserClasses ..> ListCommand : <<create>>
ParserClasses ..> SortCommand : <<create>>
ParserClasses ..> ClearCommand : <<create>>
ParserClasses ..> HelpCommand : <<create>>
ParserClasses ..> ExitCommand : <<create>>

AddCommand -up-|> Command
EditCommand -up-|> Command
DeleteCommand -up-|> Command
FindCommand -up-|> Command
FilterCommand -up-|> Command
ListCommand -up-|> Command
SortCommand -up-|> Command
ClearCommand -up-|> Command
HelpCommand -up-|> Command
ExitCommand -up-|> Command

LogicManager .left.> Command : <<call>>

LogicManager --> Model
LogicManager --> Storage
Storage --[hidden] Model
Command .[hidden]up.> Storage
Command .right.> Model

Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult : <<create>>
@enduml
